"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/home/page",{

/***/ "(app-pages-browser)/./hooks/use-lichsu-thanh-toan.ts":
/*!****************************************!*\
  !*** ./hooks/use-lichsu-thanh-toan.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLichSuThanhToan: () => (/* binding */ useLichSuThanhToan)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useLichSuThanhToan() {\n    const [records, setRecords] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [summary, setSummary] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        soLanThanhToan: 0,\n        tongNo: 0,\n        tongDaThanhToan: 0,\n        tongTongTien: 0\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchData = async ()=>{\n        const token =  true ? localStorage.getItem('userToken') : 0;\n        if (!token) {\n            setError('Không tìm thấy token xác thực');\n            return;\n        }\n        setLoading(true);\n        setError(null);\n        try {\n            const tryFetch = async (url)=>{\n                const res = await fetch(url, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: \"Bearer \".concat(token)\n                    }\n                });\n                let body = null;\n                try {\n                    body = await res.json();\n                } catch (e) {\n                    body = null;\n                }\n                return {\n                    res,\n                    body\n                };\n            };\n            // Thử các endpoint tiềm năng (mới -> cũ)\n            const candidates = [\n                'https://all-oqry.onrender.com/api/k_lichsuthanhtoan/lich-su-khach-hang',\n                'https://all-oqry.onrender.com/api/k_lichsuthanhtoan/lich-su-thanh-toan',\n                'https://all-oqry.onrender.com/api/lich-su-thanh-toan',\n                'https://all-oqry.onrender.com/api/thanhtoan/lich-su',\n                'https://all-oqry.onrender.com/api/k_lichsuthanhtoan'\n            ];\n            let fetched = null;\n            let lastErrMsg = 'Không thể lấy lịch sử thanh toán';\n            let shape = null;\n            for (const url of candidates){\n                const { res, body } = await tryFetch(url);\n                if (res.ok) {\n                    shape = body || {};\n                    fetched = Array.isArray(shape) ? shape : shape.chi_so_list || shape.data || [];\n                    break;\n                }\n                lastErrMsg = body && body.message || \"HTTP \".concat(res.status);\n                if (res.status !== 404) break;\n            }\n            if (!fetched) {\n                throw new Error(lastErrMsg);\n            }\n            // Chuẩn hóa nhiều dạng trả về: có thể là danh sách trực tiếp hoặc object chứa chi_so_list\n            const list = fetched;\n            const normalized = list.map((r)=>{\n                var _r_ChiSoID, _ref, _r_Tientra, _r_SoDienDaTieuThu, _r_SoNuocDaTieuThu, _r_TenPhiSuaChua, _r_TenPhiTru;\n                return {\n                    ChiSoID: Number((_ref = (_r_ChiSoID = r.ChiSoID) !== null && _r_ChiSoID !== void 0 ? _r_ChiSoID : r.id) !== null && _ref !== void 0 ? _ref : 0),\n                    DayPhong: r.DayPhong,\n                    ThangNam: r.ThangNam,\n                    SoPhong: r.SoPhong,\n                    ChiSoDienCu: toVnd(r.ChiSoDienCu),\n                    ChiSoNuocCu: toVnd(r.ChiSoNuocCu),\n                    ChiSoDienMoi: toVnd(r.ChiSoDienMoi),\n                    ChiSoNuocMoi: toVnd(r.ChiSoNuocMoi),\n                    GiaDienCu: toVnd(r.GiaDienCu),\n                    GiaDienMoi: toVnd(r.GiaDienMoi),\n                    GiaNuocCu: toVnd(r.GiaNuocCu),\n                    GiaNuocMoi: toVnd(r.GiaNuocMoi),\n                    TienPhong: toVnd(r.TienPhong),\n                    TongDichVu: toVnd(r.TongDichVu),\n                    TongTien: toVnd(r.TongTien),\n                    TrangThaiThanhToan: r.TrangThaiThanhToan,\n                    Tientra: toVnd((_r_Tientra = r.Tientra) !== null && _r_Tientra !== void 0 ? _r_Tientra : r.TienTra),\n                    TienTra: toVnd(r.TienTra),\n                    TienNo: toVnd(r.TienNo),\n                    SoDienDaTieuThu: toVnd((_r_SoDienDaTieuThu = r.SoDienDaTieuThu) !== null && _r_SoDienDaTieuThu !== void 0 ? _r_SoDienDaTieuThu : r.TienDien),\n                    SoNuocDaTieuThu: toVnd((_r_SoNuocDaTieuThu = r.SoNuocDaTieuThu) !== null && _r_SoNuocDaTieuThu !== void 0 ? _r_SoNuocDaTieuThu : r.TienNuoc),\n                    TienDien: toVnd(r.TienDien),\n                    TienNuoc: toVnd(r.TienNuoc),\n                    PhiSuaChua: toVnd(r.PhiSuaChua),\n                    PhiTru: toVnd(r.PhiTru),\n                    TenPhiSuaChua: (_r_TenPhiSuaChua = r.TenPhiSuaChua) !== null && _r_TenPhiSuaChua !== void 0 ? _r_TenPhiSuaChua : null,\n                    TenPhiTru: (_r_TenPhiTru = r.TenPhiTru) !== null && _r_TenPhiTru !== void 0 ? _r_TenPhiTru : null,\n                    PhongID_id: toVnd(r.PhongID_id)\n                };\n            });\n            setRecords(normalized);\n            var _toVnd;\n            const soLan = (_toVnd = toVnd(shape === null || shape === void 0 ? void 0 : shape.so_lan_thanh_toan)) !== null && _toVnd !== void 0 ? _toVnd : normalized.filter((r)=>isPaidStatus(r.TrangThaiThanhToan)).length;\n            var _toVnd1;\n            // Bám đúng logic backend mẫu: tổng nợ = sum(TienNo), tổng đã thanh toán = sum(Tientra)\n            const tongNo = (_toVnd1 = toVnd(shape === null || shape === void 0 ? void 0 : shape.tong_no)) !== null && _toVnd1 !== void 0 ? _toVnd1 : normalized.reduce((sum, r)=>{\n                var _r_TienNo;\n                return sum + ((_r_TienNo = r.TienNo) !== null && _r_TienNo !== void 0 ? _r_TienNo : 0);\n            }, 0);\n            var _toVnd2;\n            const tongDaTT = (_toVnd2 = toVnd(shape === null || shape === void 0 ? void 0 : shape.tong_da_thanh_toan)) !== null && _toVnd2 !== void 0 ? _toVnd2 : normalized.reduce((s, r)=>{\n                var _r_Tientra, _ref;\n                return s + ((_ref = (_r_Tientra = r.Tientra) !== null && _r_Tientra !== void 0 ? _r_Tientra : r.TienTra) !== null && _ref !== void 0 ? _ref : 0);\n            }, 0);\n            const tongTongTien = normalized.reduce((s, r)=>{\n                var _r_TongTien;\n                return s + ((_r_TongTien = r.TongTien) !== null && _r_TongTien !== void 0 ? _r_TongTien : 0);\n            }, 0);\n            setSummary({\n                soLanThanhToan: soLan,\n                tongNo,\n                tongDaThanhToan: tongDaTT,\n                tongTongTien\n            });\n        } catch (err) {\n            const msg = err instanceof Error ? err.message : 'Không thể tải lịch sử thanh toán';\n            setError(msg);\n        } finally{\n            setLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLichSuThanhToan.useEffect\": ()=>{\n            fetchData();\n        }\n    }[\"useLichSuThanhToan.useEffect\"], []);\n    return {\n        records,\n        summary,\n        loading,\n        error,\n        refresh: fetchData\n    };\n}\nfunction toNum(v) {\n    if (v === null || v === undefined || v === '') return undefined;\n    const n = Number(v);\n    return Number.isFinite(n) ? n : undefined;\n}\n// Some APIs may return numbers formatted as strings with dots/commas\nfunction toVnd(v) {\n    if (v === null || v === undefined || v === '') return undefined;\n    if (typeof v === 'number') return v;\n    if (typeof v === 'string') {\n        const cleaned = v.replace(/[.,\\s]/g, '');\n        const n = Number(cleaned);\n        return Number.isFinite(n) ? n : undefined;\n    }\n    return undefined;\n}\nfunction isPaidStatus(v) {\n    return v === 'Y' || v === '1' || v === 1 || v === true || v === 'true' || v === 'Đã thanh toán' || v === 'paid' || v === 'PAID';\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-lichsu-thanh-toan.ts\n"));

/***/ })

});